## data ##
  title
    todoList
      items
        option to Create and delete an item 
        mechanism to mark an item as done and undone
  
## dataStructure ##
[{
  name:priyanshu,
  username:palPriyanshu,
  password:123,
  todoLists: [
    {
      id:1
      title :shopping;
      tasks : [{id:1, item: buy dress, done: true}, {id:2, item:buy shoes, done: false}]
    },
    {
      id:2
      title :attend wedding;
      tasks : [{id:1, item:book tickets, done: true}, {id:2, item:buy shagun gift, done:false }]
    },
  ]
  }
]

## save todoList
  data
    {
      title :come back for work;
      tasks : [{item: book tickets, done: true}]
    }
  take older todoList 
  append this data to older todoList

## delete todoList


--working-- create server
            create lib for 
--done--  app class
            handler
            responses
--done--  mimeTypes
--done--  statusCodes

--done-- Create one or more to-do list with a title
--done-- View all the to-do lists
--done-- Add an item to a to-do list
--done-- Delete an item from to-do list
--done-- Mark an item as done and undone
--done-- Delete a todo list
--done-- show title to textArea

--done-- Edit title: Ability to edit their existing todo list title.
--done-- Edit tasks: Ability to edit their existing tasks.
--done-- Search by title:  Search the list by its title words.
--done-- Search by tasks: Search the todo item by its matched words.

--done-- add login mechanism
--done-- add signIn mechanism
--done-- Home Page: If not logged in it is a login page else it is the user's todo page/dashboard.
--done-- User Todo's: A user can log in their account and work on their own todos.

add logout mechanism
use enter key press event to save title name
provide msg for user if user had not logged in
increase size of every textBox in frontEnd
increase size of add(+) and delete(-) symbol
--done-- remove html from todo class


